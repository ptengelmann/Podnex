@import '../../styles/variables';

.helpFeedPage {
  width: 100%;
  min-height: 100vh;
  background-color: $black;
  color: $white;
  position: relative;
  overflow: hidden;
}

// Animated grid background
.gridBackground {
  position: absolute;
  top: -50%;
  left: -50%;
  right: -50%;
  bottom: -50%;
  background-image: 
    linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 40px 40px;
  background-position: center center;
  transform-origin: center;
  z-index: 0;
  will-change: transform;
}

// Hero section styling
.heroSection {
  padding: 100px 0 60px;
  position: relative;
  text-align: center;
  z-index: 1;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 24px;
  position: relative;
}

.heroContent {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.sectionTitleWrapper {
  display: inline-block;
  position: relative;
  margin-bottom: 24px;
}

.sectionTitle {
  font-size: 48px;
  font-weight: 800;
  margin-bottom: 8px;
  color: $white;
  position: relative;
  z-index: 2;
  letter-spacing: -0.5px;
  
  @media (max-width: 768px) {
    font-size: 36px;
  }
}

.titleDecoration {
  position: absolute;
  height: 8px;
  width: 60%;
  background-color: $gold;
  bottom: 12px;
  left: 20%;
  z-index: 1;
  opacity: 0.3;
  transform: skewX(-15deg);
}

.sectionDescription {
  font-size: 18px;
  color: $gray;
  max-width: 600px;
  margin: 0 auto 32px;
  line-height: 1.6;
  
  @media (max-width: 768px) {
    font-size: 16px;
  }
}

// Login prompt styling
.loginPrompt {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  padding: 24px;
  max-width: 500px;
  margin: 0 auto;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  
  p {
    font-size: 16px;
    color: $gray;
  }
}

.loginButton {
  display: inline-block;
  padding: 12px 24px;
  background-color: $gold;
  color: $black;
  font-weight: 600;
  border-radius: 8px;
  text-decoration: none;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba($gold, 0.3);
  }
}

// Content section styling
.contentSection {
  padding: 40px 0 80px;
  position: relative;
  z-index: 1;
}

// Filter bar styling
.filterBar {
  margin-bottom: 40px;
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 12px;
  padding: 24px;
}

.filterSection {
  margin-bottom: 20px;
  
  h3 {
    font-size: 16px;
    font-weight: 600;
    color: $white;
    margin-bottom: 12px;
  }
  
  &:last-child {
    margin-bottom: 0;
  }
}

.skillPills, .urgencyPills {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
}

.skillPill, .urgencyPill {
  background: transparent;
  border: 1px solid rgba($gray, 0.3);
  border-radius: 30px;
  padding: 8px 16px;
  font-size: 14px;
  color: $gray;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover {
    border-color: rgba($white, 0.5);
    color: $white;
  }
  
  &.active {
    background-color: rgba($gold, 0.1);
    border-color: $gold;
    color: $gold;
  }
}

// Pod grid styling
.podGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 24px;
  
  @media (max-width: 768px) {
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  }
}

// Pod card styling
.podCard {
  background-color: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 12px;
  padding: 24px;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
  overflow: hidden;
  
  // Decorative element in top left corner
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 40%;
    height: 4px;
    background: linear-gradient(90deg, $gold, transparent);
    opacity: 0.6;
    transition: width 0.3s ease;
  }
  
  &:hover {
    transform: translateY(-5px);
    border-color: rgba($gold, 0.6);
    background-color: rgba(255, 255, 255, 0.05);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    
    &::before {
      width: 100%;
      opacity: 1;
    }
  }
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

// Urgency badge styling
.urgencyBadge {
  font-size: 12px;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 4px 10px;
  border-radius: 20px;
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid rgba(255, 255, 255, 0.06);
  
  .dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    display: inline-block;
  }
  
  &.high {
    color: #FF4D4D;
    
    .dot {
      background-color: #FF4D4D;
      box-shadow: 0 0 5px rgba(255, 77, 77, 0.5);
    }
  }
  
  &.medium {
    color: #FBBF24;
    
    .dot {
      background-color: #FBBF24;
      box-shadow: 0 0 5px rgba(251, 191, 36, 0.5);
    }
  }
  
  &.low {
    color: #34D399;
    
    .dot {
      background-color: #34D399;
      box-shadow: 0 0 5px rgba(52, 211, 153, 0.5);
    }
  }
}

// Match score styling
.matchScore {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 12px;
  font-weight: 600;
  color: $gold;
  
  svg {
    color: $gold;
  }
}

// Pod title styling
.podTitle {
  font-size: 20px;
  font-weight: 700;
  color: $white;
  margin-bottom: 12px;
  line-height: 1.3;
}

// Creator info styling
.creatorInfo {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 16px;
  
  .avatar {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    background-color: rgba($gold, 0.2);
    color: $gold;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 12px;
  }
  
  span {
    font-size: 14px;
    color: $gray;
  }
}

// Roles list styling
.rolesList {
  margin-top: auto;
  margin-bottom: 20px;
}

.rolesHeader {
  display: flex;
  align-items: center;
  gap: 6px;
  margin-bottom: 12px;
  color: rgba($white, 0.6);
  font-size: 12px;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.5px;
  
  svg {
    opacity: 0.7;
  }
}

.roles {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.role {
  background-color: rgba($gray, 0.15);
  color: $gray;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 500;
  transition: all 0.3s ease;
  border: 1px solid rgba($gray, 0.2);
  
  &:hover {
    background-color: rgba($gray, 0.25);
    border-color: rgba($gray, 0.3);
    color: $white;
  }
}

// Card actions styling
.cardActions {
  display: flex;
  gap: 12px;
  margin-top: auto;
}

.viewButton, .joinButton {
  padding: 10px 16px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.viewButton {
  background: transparent;
  border: 1px solid rgba($gray, 0.3);
  color: $white;
  flex: 1;
  
  &:hover {
    border-color: rgba($white, 0.6);
  }
}

.joinButton {
  background-color: $gold;
  color: $black;
  border: none;
  flex: 1.5;
  gap: 8px;
  position: relative;
  overflow: hidden;
  
  svg {
    transition: transform 0.2s ease;
  }
  
  &:hover {
    svg {
      transform: translateX(3px);
    }
  }
  
  // Button shine effect
  &::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0),
      rgba(255, 255, 255, 0.3),
      rgba(255, 255, 255, 0)
    );
    transform: rotate(30deg);
    transition: 1.2s;
    opacity: 0;
  }
  
  &:hover::after {
    opacity: 1;
    left: 100%;
    transition: 1s;
  }
}

// Loading state styling
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  color: $gray;
  
  p {
    margin-top: 16px;
    font-size: 16px;
  }
}

.loader {
  width: 48px;
  height: 48px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  border-top-color: $gold;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Error state styling
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  color: $gray;
  
  svg {
    margin-bottom: 16px;
    color: $gray;
  }
  
  p {
    margin-bottom: 24px;
    font-size: 16px;
  }
}

.retryButton {
  padding: 10px 24px;
  background-color: $gold;
  color: $black;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba($gold, 0.3);
  }
}

// Empty state styling
.emptyState {
  text-align: center;
  padding: 60px 0;
  background: rgba(255, 255, 255, 0.02);
  border: 1px dashed rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
  svg {
    margin-bottom: 24px;
    color: $gray;
    opacity: 0.5;
  }
  
  h3 {
    font-size: 24px;
    color: $white;
    margin-bottom: 8px;
  }
  
  p {
    color: $gray;
    margin-bottom: 24px;
  }
}

.resetButton {
  padding: 10px 24px;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: $white;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  
  &:hover {
    border-color: $gold;
    color: $gold;
  }
}